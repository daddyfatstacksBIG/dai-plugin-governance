#!/usr/bin/env bash

# stop the script if anything fails
set -e

START_TIME=`date +%s`
CWD=`dirname "$0"`
PORT=${GOV_TESTNET_PORT:-2000}

./node_modules/.bin/ganache-cli -i 999 -p "$PORT" -a 1000 \
  -m "hill law jazz limb penalty escape public dish stand bracket blue jar" \
  > ./ganache.out & netpid=$!
trap "kill $netpid" EXIT

# Wait until it's up, then use it for the deployment.
echo "Waiting for ganache-cli to start up on port $PORT..."
export ETH_RPC_URL=http://127.1:"$PORT"
until curl -s -o/dev/null "$ETH_RPC_URL"; do sleep 3; done

# Configure seth
export SOLC_FLAGS="${SOLC_FLAGS:-"--optimize"}"
export ETH_GAS="${ETH_GAS:-"4500000"}"
export ETH_FROM="${ETH_FROM:-$(seth rpc eth_coinbase)}" # defaults to 0x16fb96a5fa0427af0c8f7cf1eb4870231c8154b6
export SETH_STATUS=yes
export ETH_RPC_ACCOUNTS=yes # Don't use ethsign

cd "$CWD"/src/ds-chief
dapp update
dapp --use solc:0.5.0 build --extract
export SETH_ASYNC=yes
test -z "$GOV" && GOVtx=$(dapp create DSToken "$(seth --to-bytes32 "$(seth --from-ascii 'GOV')")")
test -z "$IOU" && IOUtx=$(dapp create DSToken "$(seth --to-bytes32 "$(seth --from-ascii 'IOU')")")
export SETH_ASYNC=no
test -z "$GOV" && GOV=$(seth receipt "$GOVtx" contractAddress)
test -z "$IOU" && IOU=$(seth receipt "$IOUtx" contractAddress)
MAX_YAYS=5
CHIEF=$(dapp create DSChief "$GOV" "$IOU" "$MAX_YAYS")
# CHIEF mints and burns IOUs, so it must be the owner of the token contract
seth send "$IOU" 'setOwner(address)' "$CHIEF"
# Seed our coinbase account with some Gov
seth send "$GOV" 'mint(uint256)' "$(seth --to-uint256 "$(seth --to-wei 100000 eth)")"
cd -

cd  "$CWD"/src/vote-proxy
dapp update
dapp --use solc:0.5.0 build --extract
VOTE_PROXY_FACTORY=$(dapp create VoteProxyFactory "$CHIEF")
cd -

cd  "$CWD"/src/symbolic-voting
dapp update
dapp --use solc:0.5.0 build --extract
POLLING=$(dapp create PollingEmitter)
cd -

cd "$CWD"/src/dss
dapp update
dapp --use solc:0.5.11 build --extract
MCD_END=$(dapp create End)
cd -

cd  "$CWD"/src/esm
dapp update
dapp --use solc:0.5.6 build --extract
PIT="0x0000000000000000000000000000000000000000"
MIN=$(seth --to-uint256 "$(seth --to-wei 50000 eth)")
MCD_ESM=$(dapp create ESM "$GOV" "$MCD_END" "$PIT" "$MIN");
cd -

# Save the contract addresses to a JSON file
cat > "$CWD"/../contracts/addresses/testnet.json <<- EOM
{
  "GOV": "$GOV",
  "IOU": "$IOU",
  "CHIEF": "$CHIEF",
  "POLLING": "$POLLING",
  "VOTE_PROXY_FACTORY": "$VOTE_PROXY_FACTORY",
  "MCD_ESM": "$MCD_ESM",
  "MCD_END": "$MCD_END"
}
EOM

END_TIME=`date +%s`
ELAPSED=`echo "$END_TIME" - "$START_TIME" | bc`
echo "Created testnet in" "$ELAPSED" "seconds."

if [[ "$1" != '--ci' ]]; then
  echo "Press Ctrl-C to kill the testnet"
      while [ "$key" != "\n" ]; do
  read
  done
else
    # Proceed to the command given as arguments (but first strip --ci).
    "$(echo "$@" | sed 's/^\-\-ci //')"
fi
